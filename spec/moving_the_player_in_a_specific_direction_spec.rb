require 'require_all'
require_all 'lib'

describe HuntTheWumpus do
  describe "Moving the player north" do
    before :all do

      CaveGenerator.always_generate_this_hardcoded_cave("
        ..........
        e.........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........")
      @game = HuntTheWumpus.new(10)

      @game.receive_command(:move_north)
    end

    it "moves the player one spot to the north" do
      @game.status.map[0][0].should == :player
    end
  end

  describe "Moving the player south" do
    before :all do
      CaveGenerator.always_generate_this_hardcoded_cave("
        e.........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........")
      @game = HuntTheWumpus.new(10)

      @game.receive_command(:move_south)
    end
 
    it "moves the player one spot to the south" do
      @game.status.map[1][0].should == :player
    end
  end 

  describe "Moving the player west" do
    before :all do
      CaveGenerator.always_generate_this_hardcoded_cave("
        .e........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........")
      @game = HuntTheWumpus.new(10)

      @game.receive_command(:move_west)
    end
 
    it "moves the player one spot to the west" do
      @game.status.map[0][0].should == :player
    end
  end 

  describe "Moving the player east" do
   before :all do
      CaveGenerator.always_generate_this_hardcoded_cave("
        e.........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........
        ..........")
      @game = HuntTheWumpus.new(10)

      @game.receive_command(:move_east)
    end
 
    it "moves the player one spot to the east" do
      @game.status.map[0][1].should == :player
    end
  end
end